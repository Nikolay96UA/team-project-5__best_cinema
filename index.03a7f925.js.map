{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,aAQA,MAAME,EAAWC,SAASC,cAAc,yBAkBxC,SAASC,EAAgBC,GACvB,MAAMC,EAAS,gHAEkCD,EAAeE,mJAGfF,EAAeG,gIAKrCH,EAAeI,+hBAaIJ,EAAeK,4IAIzCL,EAAeM,wGAEUN,EAAeO,ujBAerBP,EAAeQ,kIAGfR,EAAeS,OAAOC,KAAIC,GAAS,GAAGA,EAAMC,iNAOpDZ,EAAea,sGAK9CjB,EAASkB,mBAAmB,YAAab,E,CA5E3Cc,MAAM,GAAGpB,EAAAqB,WAAWrB,EAAAsB,yBAAyBtB,EAAAuB,kBAC1CC,MAAKC,GACGA,EAASC,SAEjBF,MAAKG,GACaA,EAAOC,QAAQ,GAChBC,KAEjBL,MAAKM,IACJV,MAAM,GAAGpB,EAAAqB,iBAAiBS,aAAmB9B,EAAAuB,0BAC1CC,MAAKC,GACGA,EAASC,SAEjBF,KAAKpB,EAAgB,ICvB5BJ,EAAAD,EAAA,a,aAQO,MAAMgC,EAAe7B,SAAS8B,eAAe,eAEpD,IACIC,EAAW,GACXC,EAAiB,IAGrBC,iBACE,IACE,MAAMC,QAkBVD,iBACE,IACE,MAAQE,KAAMC,SAAuBC,EAAAC,QAAMC,IACzC,GAAGzC,EAAAqB,WAAWrB,EAAA0C,0BAA0B1C,EAAAuB,kBAE1C,OAAOe,EAAaV,O,CACpB,MAAOe,GACPC,QAAQC,IAAIF,E,EAzBmBG,IACvBT,KAAMU,SAAuBR,EAAAC,QAAMC,IACzC,GAAGzC,EAAAqB,WAAWrB,EAAAgD,0BAA0BhD,EAAAuB,WAGpC0B,EAAiBb,EAAiBc,MAAM,EAAG,GAE3CC,EAAkBJ,EAAajC,OACrC,IAAK,IAAIsC,EAAI,EAAGA,EAAID,EAAgBE,OAAQD,GAAK,EAC/CnB,EAASqB,KAAKH,EAAgBC,GAAGvB,IACjCK,EAAeoB,KAAKH,EAAgBC,GAAGnC,MAuCvBX,EArCL2C,EAmBZlC,KACC,EAACN,MAAEA,EAAK8C,UAAEA,EAAS7C,aAAEA,EAAYH,YAAEA,EAAWI,aAAEA,EAAYkB,GAAEA,MAC5D,MAAO,8KAC4JtB,eAAyBsB,+FAErJpB,mEAiB/C,SAAyB+C,GACvB,MAAMC,EAAW,GACjB,IAAK,IAAIL,EAAI,EAAGA,GAAKI,EAASH,OAAQD,GAAK,EACzC,GAAInB,EAASyB,SAASF,EAASJ,IAAK,CAClC,MAAMO,EAAO1B,EAAS2B,QAAQJ,EAASJ,IACvCK,EAASH,KAAKpB,EAAeyB,G,CAGjC,KAAOF,EAASJ,OAAS,GACvBI,EAASI,MAEX,OAAOJ,EAASK,KAAK,K,CA1BPC,CAAgBR,QAAgB7C,EAAawC,MAAM,EAAG,8EA6BvDc,EA1B4BC,OAAOtD,EAAauD,QAAQ,IA2BxD,KAATF,EACK,YACEA,EAAO,IAAMA,EAAO,EACtB,aACW,IAATA,EACF,cACEA,EAAO,GAAKA,EAAO,EACrB,cACW,IAATA,EACF,YACEA,EAAO,GAAKA,EAAO,EACrB,aACW,IAATA,EACF,aACEA,EAAO,GAAKA,EAAO,EACrB,cACW,IAATA,EACF,YACEA,EAAO,GAAKA,EAAO,EACrB,WACW,IAATA,EACF,YACGA,OAAL,EACE,iDAxBX,IAAeA,CAxBD,IAGTF,KAAK,IAIR/B,EAAaoC,UAAY7D,C,CArCvB,MAAOqC,GACPC,QAAQC,IAAIF,E,CAmChB,IAAsBrC,C,CApDtB8D,GCdA,MACMC,EAAWnE,SAASC,cAAc,kBAIxCmE,OAAOC,iBAAiB,UAAU,MAFbD,OAAOE,aAAetE,SAASuE,gBAAgBC,WAHrD,IAOXL,EAASM,UAAUC,IAAI,uBAEvBP,EAASM,UAAUE,OAAO,sBAAsB,IAIpDR,EAASE,iBAAiB,SAAS,KACjCD,OAAOQ,SAAS,CACdC,IAAK,EACLC,SAAU,UACV,I","sources":["src/index.js","src/js/components/upcoming.js","src/js/components/trends.js","src/js/components/scroll-to-top.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/hero';\nimport './js/components/upcoming';\nimport './js/components/trends';\nimport './js/components/scroll-to-top';\n\n// import './js/components/upcoming';\n// import './js/components/trends';\n// import './js/components/footer';\n// Mmodals\nimport './js/components/modals/modal-pop-up';\n","import { BASE_URL, API_KEY, URL_TREND_WEEK, URL_GENRE_LIST } from '../constants/api';\n\n// !!! Якщо розкоментувати цей рядок буде помилка tui-pagination\n// import { getTrendMoviesOfWeek } from './gallery';\nimport axios from 'axios';\n\nimport { API_KEY, BASE_URL, URL_TREND_DAY, URL_TREND_WEEK } from '../constants/api';\n\nconst upcoming = document.querySelector('#uncoming-this-mounth');\n\nfetch(`${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}&page=1`)\n  .then(response => {\n    return response.json();\n  })\n  .then(movies => {\n    const popMovie = movies.results[0];\n    return popMovie.id;\n  })\n  .then(movieId => {\n    fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(response => {\n        return response.json();\n      })\n      .then(renderMovieCard);\n  });\n\nfunction renderMovieCard(movieWithGenre) {\n  const markup = `<div class=\"img-div\">\n    <img class=\"muvie-image-poster\"\n        src=\"https://image.tmdb.org/t/p/original/${movieWithGenre.poster_path}\"\n        alt=\"\" width=\"805\" height=\"458\">\n    <img class=\"muvie-image-backdrop\"\n        src=\"https://image.tmdb.org/t/p/original/${movieWithGenre.backdrop_path}\"\n        alt=\"\" width=\"805\" height=\"458\">\n</div>\n\n<div class=\"meta-items-div\">\n    <h2 class=\"muvie-name\">${movieWithGenre.title}</h2>\n    <div class=\"meta-div\">\n        <div class=\"meta-left\">\n            <ul class=\"muvie-meta-left-criterions\">\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Release date</b>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Vote / Votes</b>\n                </li>\n            </ul>\n            <ul class=\"muvie-meta-left-data\">\n                <li class=\"muvie-meta-item\">\n                    <span class=\"date-number\">${movieWithGenre.release_date}</span>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <span class=\"vote-numbers\">${\n                      movieWithGenre.vote_average\n                    }</span><span class=\"slash\"> / </span><span\n                        class=\"vote-numbers\">${movieWithGenre.vote_count}</span>\n                </li>\n            </ul>\n        </div>\n        <div class=\"meta-right\">\n            <ul class=\"muvie-meta-right-criterions\">\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Popularity</b>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Genre</b>\n                </li>\n            </ul>\n            <ul class=\"muvie-meta-right-data\">\n                <li class=\"muvie-meta-item\">\n                    <span class=\"data\">${movieWithGenre.popularity}</span>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <span class=\"data\">${movieWithGenre.genres.map(genre => `${genre.name}`)}</span>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"muvie-description-item\">\n        <b class=\"criterion about\">About</b>\n        <p class=\"description\">${movieWithGenre.overview}</p>\n    </div>\n\n    <button type=\"button\" class=\"remind-btn\">Remind me</button>\n</div>`;\n  upcoming.insertAdjacentHTML('beforeend', markup);\n}\n","import {\n  BASE_URL,\n  API_KEY,\n  URL_TREND_WEEK,\n  URL_GENRE_LIST,\n} from '../constants/api';\nimport axios from 'axios';\n\nexport const weekTrendsEl = document.getElementById('trends-list');\n\nlet currentPage = 1;\nlet idsArray = [];\nlet categorysArray = [];\n\nonPageShow();\nasync function onPageShow() {\n  try {\n    const arrayTrandMovies = await getTrendMoviesOfWeek();\n    const { data: genresObject } = await axios.get(\n      `${BASE_URL}${URL_GENRE_LIST}?api_key=${API_KEY}`\n    );\n\n    const allUncomingArr = arrayTrandMovies.slice(0, 3);\n\n    const genresListArray = genresObject.genres;\n    for (let i = 0; i < genresListArray.length; i += 1) {\n      idsArray.push(genresListArray[i].id);\n      categorysArray.push(genresListArray[i].name);\n    }\n    createMarkUp(allUncomingArr);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getTrendMoviesOfWeek() {\n  try {\n    const { data: moviesObject } = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}&page=${currentPage}`\n    );\n    return moviesObject.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(\n      ({ title, genre_ids, release_date, poster_path, vote_average, id }) => {\n        return `\n        <li class=\"trends-card\" style=\"background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%), url(https://image.tmdb.org/t/p/w500${poster_path})\" data-id=${id}>\n          <div class=\"trends-card-about\">\n            <h3 class=\"trends-card-subtitle\">${title}</h3>\n            <p class=\"trends-card-meta\">\n              ${getGenreForCard(genre_ids)} | ${release_date.slice(0, 4)}\n            </p>\n          </div>\n          <div class=\"vote-cinemas ${stars(Number(vote_average.toFixed(1)))}\">\n          </div>\n        </li>`;\n      }\n    )\n    .join('');\n  renderMarkup(markup);\n}\nfunction renderMarkup(markup) {\n  weekTrendsEl.innerHTML = markup;\n}\n\nfunction getGenreForCard(genreIds) {\n  const genreArr = [];\n  for (let i = 0; i <= genreIds.length; i += 1) {\n    if (idsArray.includes(genreIds[i])) {\n      const indx = idsArray.indexOf(genreIds[i]);\n      genreArr.push(categorysArray[indx]);\n    }\n  }\n  while (genreArr.length > 2) {\n    genreArr.pop();\n  }\n  return genreArr.join(', ');\n}\n\nfunction stars(vote) {\n  if (vote === 10) {\n    return 'ten-stars';\n  } else if (vote < 10 && vote > 8) {\n    return 'nine-stars';\n  } else if (vote === 8) {\n    return 'eight-stars';\n  } else if (vote < 8 && vote > 6) {\n    return 'seven-stars';\n  } else if (vote === 6) {\n    return 'six-stars';\n  } else if (vote < 6 && vote > 4) {\n    return 'five-stars';\n  } else if (vote === 4) {\n    return 'four-stars';\n  } else if (vote < 4 && vote > 2) {\n    return 'three-stars';\n  } else if (vote === 2) {\n    return 'two-stars';\n  } else if (vote < 2 && vote > 0) {\n    return 'one-star';\n  } else if (vote === 0) {\n    return 'zero-star';\n  } else if (!vote) {\n    return 'No rating';\n  }\n}\n","const offset = 100;\nconst scrollUp = document.querySelector('.scroll-to-top');\n\nconst getTop = () => window.pageYOffset || document.documentElement.scrollTop;\n\nwindow.addEventListener('scroll', () => {\n  if (getTop() > offset) {\n    scrollUp.classList.add('scroll-to-top-activ');\n  } else {\n    scrollUp.classList.remove('scroll-to-top-activ');\n  }\n});\n\nscrollUp.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n"],"names":["parcelRequire","$g5NAz","$2278764e9f3f2129$var$upcoming","document","querySelector","$2278764e9f3f2129$var$renderMovieCard","movieWithGenre","markup","poster_path","backdrop_path","title","release_date","vote_average","vote_count","popularity","genres","map","genre","name","overview","insertAdjacentHTML","fetch","BASE_URL","URL_TREND_DAY","API_KEY","then","response","json","movies","results","id","movieId","$6763c1580dddb1f2$export$cd52274a76bf5a72","getElementById","$6763c1580dddb1f2$var$idsArray","$6763c1580dddb1f2$var$categorysArray","async","arrayTrandMovies","data","moviesObject","$2shzp","default","get","URL_TREND_WEEK","error","console","log","$6763c1580dddb1f2$var$getTrendMoviesOfWeek","genresObject","URL_GENRE_LIST","allUncomingArr","slice","genresListArray","i","length","push","genre_ids","genreIds","genreArr","includes","indx","indexOf","pop","join","$6763c1580dddb1f2$var$getGenreForCard","vote","Number","toFixed","innerHTML","$6763c1580dddb1f2$var$onPageShow","$1dcf0f4b4dee14cd$var$scrollUp","window","addEventListener","pageYOffset","documentElement","scrollTop","classList","add","remove","scrollTo","top","behavior"],"version":3,"file":"index.03a7f925.js.map"}