{"mappings":"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","sources":["src/index.js","src/js/components/upcoming.js","src/js/components/trends.js","src/js/components/scroll-to-top.js","src/js/components/modals/modal-pop-up-index.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/hero';\nimport './js/components/upcoming';\nimport './js/components/trends';\nimport './js/components/scroll-to-top';\n\n// import './js/components/footer';\n// Mmodals\nimport './js/components/modals/modal-pop-up-index';\nimport './js/components/modals/modal-trailer';\n","import { BASE_URL, API_KEY, URL_TREND_WEEK, URL_GENRE_LIST } from '../constants/api';\n\n// !!! Якщо розкоментувати цей рядок буде помилка tui-pagination\n// import { getTrendMoviesOfWeek } from './gallery';\nimport axios from 'axios';\n\nimport { API_KEY, BASE_URL, URL_TREND_DAY, URL_TREND_WEEK } from '../constants/api';\n\nconst upcoming = document.querySelector('#uncoming-this-mounth');\n\nfetch(`${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}&page=1`)\n  .then(response => {\n    return response.json();\n  })\n  .then(movies => {\n    const popMovie = movies.results[0];\n    return popMovie.id;\n  })\n  .then(movieId => {\n    fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(response => {\n        return response.json();\n      })\n      .then(renderMovieCard);\n  });\n\nfunction renderMovieCard(movieWithGenre) {\n  const markup = `<div class=\"img-div\">\n    <img class=\"muvie-image-poster\"\n        src=\"https://image.tmdb.org/t/p/original/${movieWithGenre.poster_path}\"\n        alt=\"\" width=\"805\" height=\"458\">\n    <img class=\"muvie-image-backdrop\"\n        src=\"https://image.tmdb.org/t/p/original/${movieWithGenre.backdrop_path}\"\n        alt=\"\" width=\"805\" height=\"458\">\n</div>\n\n<div class=\"meta-items-div\">\n    <h2 class=\"muvie-name\">${movieWithGenre.title}</h2>\n    <div class=\"meta-div\">\n        <div class=\"meta-left\">\n            <ul class=\"muvie-meta-left-criterions\">\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Release date</b>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Vote / Votes</b>\n                </li>\n            </ul>\n            <ul class=\"muvie-meta-left-data\">\n                <li class=\"muvie-meta-item\">\n                    <span class=\"date-number\">${movieWithGenre.release_date}</span>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <span class=\"vote-numbers\">${\n                      movieWithGenre.vote_average\n                    }</span><span class=\"slash\"> / </span><span\n                        class=\"vote-numbers\">${movieWithGenre.vote_count}</span>\n                </li>\n            </ul>\n        </div>\n        <div class=\"meta-right\">\n            <ul class=\"muvie-meta-right-criterions\">\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Popularity</b>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <b class=\"criterion\">Genre</b>\n                </li>\n            </ul>\n            <ul class=\"muvie-meta-right-data\">\n                <li class=\"muvie-meta-item\">\n                    <span class=\"data\">${movieWithGenre.popularity}</span>\n                </li>\n                <li class=\"muvie-meta-item\">\n                    <span class=\"data\">${movieWithGenre.genres.map(genre => `${genre.name}`)}</span>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"muvie-description-item\">\n        <b class=\"criterion about\">About</b>\n        <p class=\"description\">${movieWithGenre.overview}</p>\n    </div>\n\n    <button type=\"button\" class=\"remind-btn\">Remind me</button>\n</div>`;\n  upcoming.insertAdjacentHTML('beforeend', markup);\n}\n","import {\n  BASE_URL,\n  API_KEY,\n  URL_TREND_WEEK,\n  URL_GENRE_LIST,\n} from '../constants/api';\nimport axios from 'axios';\n\nexport const weekTrendsEl = document.getElementById('trends-list');\n\nlet currentPage = 1;\nlet idsArray = [];\nlet categorysArray = [];\n\nonPageShow();\nasync function onPageShow() {\n  try {\n    const arrayTrandMovies = await getTrendMoviesOfWeek();\n    const { data: genresObject } = await axios.get(\n      `${BASE_URL}${URL_GENRE_LIST}?api_key=${API_KEY}`\n    );\n\n    const allUncomingArr = arrayTrandMovies.slice(0, 3);\n\n    const genresListArray = genresObject.genres;\n    for (let i = 0; i < genresListArray.length; i += 1) {\n      idsArray.push(genresListArray[i].id);\n      categorysArray.push(genresListArray[i].name);\n    }\n    createMarkUp(allUncomingArr);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getTrendMoviesOfWeek() {\n  try {\n    const { data: moviesObject } = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}&page=${currentPage}`\n    );\n    return moviesObject.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(\n      ({ title, genre_ids, release_date, poster_path, vote_average, id }) => {\n        return `\n        <li class=\"trends-card\" style=\"background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%), url(https://image.tmdb.org/t/p/w500${poster_path})\" data-id=${id}>\n          <div class=\"trends-card-about\">\n            <h3 class=\"trends-card-subtitle\">${title}</h3>\n            <p class=\"trends-card-meta\">\n              ${getGenreForCard(genre_ids)} | ${release_date.slice(0, 4)}\n            </p>\n          </div>\n          <div class=\"vote-cinemas ${stars(Number(vote_average.toFixed(1)))}\">\n          </div>\n        </li>`;\n      }\n    )\n    .join('');\n  renderMarkup(markup);\n}\nfunction renderMarkup(markup) {\n  weekTrendsEl.innerHTML = markup;\n}\n\nfunction getGenreForCard(genreIds) {\n  const genreArr = [];\n  for (let i = 0; i <= genreIds.length; i += 1) {\n    if (idsArray.includes(genreIds[i])) {\n      const indx = idsArray.indexOf(genreIds[i]);\n      genreArr.push(categorysArray[indx]);\n    }\n  }\n  while (genreArr.length > 2) {\n    genreArr.pop();\n  }\n  return genreArr.join(', ');\n}\n\nfunction stars(vote) {\n  if (vote === 10) {\n    return 'ten-stars';\n  } else if (vote < 10 && vote > 8) {\n    return 'nine-stars';\n  } else if (vote === 8) {\n    return 'eight-stars';\n  } else if (vote < 8 && vote > 6) {\n    return 'seven-stars';\n  } else if (vote === 6) {\n    return 'six-stars';\n  } else if (vote < 6 && vote > 4) {\n    return 'five-stars';\n  } else if (vote === 4) {\n    return 'four-stars';\n  } else if (vote < 4 && vote > 2) {\n    return 'three-stars';\n  } else if (vote === 2) {\n    return 'two-stars';\n  } else if (vote < 2 && vote > 0) {\n    return 'one-star';\n  } else if (vote === 0) {\n    return 'zero-star';\n  } else if (!vote) {\n    return 'No rating';\n  }\n}\n","const offset = 100;\nconst scrollUp = document.querySelector('.scroll-to-top');\n\nconst getTop = () => window.pageYOffset || document.documentElement.scrollTop;\n\nwindow.addEventListener('scroll', () => {\n  if (getTop() > offset) {\n    scrollUp.classList.add('scroll-to-top-activ');\n  } else {\n    scrollUp.classList.remove('scroll-to-top-activ');\n  }\n});\n\nscrollUp.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n","import { MovieDatabaseAPI } from '../../utils/fetchMovieDetails';\nimport { weekTrendsEl } from '../trends';\n\nconst body = document.querySelector('body');\nconst closeModalBtn = document.querySelector('[data-close-modal]');\nconst backdrop = document.querySelector('[data-backdrop]');\nconst modalPopUp = document.querySelector('.modal');\nconst container = document.querySelector('.wrap');\nconst galleryEl = document.querySelector('.gallery');\n// const weekTrendsEl = document.getElementById('trends-list');\n\nconst movieDatabaseAPI = new MovieDatabaseAPI();\nlet detailMarkup;\n\n// form.addEventListener('submit', fetchDetailInfo);\ncloseModalBtn.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', closeByBackdrop);\ndocument.addEventListener('keydown', function (e) {\n  if (e.key === 'Escape') {\n    closeModal();\n  }\n});\n\nfunction closeByBackdrop(e) {\n  const currentEl = e.target;\n  if (currentEl !== backdrop) {\n    return;\n  } else {\n    closeModal();\n  }\n}\n\nfunction openModal() {\n  backdrop.classList.remove('backdrop--hidden');\n  body.classList.add('modal-open');\n  // closeModalBtn.removeEventListener('click', closeModal);\n  // backdrop.removeEventListener('click', closeByBackdrop);\n}\n\ncloseModalBtn.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', closeByBackdrop);\n\nfunction closeModal() {\n  backdrop.classList.add('backdrop--hidden');\n  body.classList.remove('modal-open');\n  // galleryEl.removeEventListener('click', onGalleryLinkClick);\n}\n\nasync function fetchDetailInfo(movieId) {\n  try {\n    const result = await movieDatabaseAPI.fetchMovieDetails(movieId);\n    renderDetailMarkup(result);\n\n    const addToLibraryBtn = document.querySelector('.add-to-library');\n\n    const library = localStorage.getItem('library');\n    const localStorageData = library ? JSON.parse(library) : [];\n\n    for (let i = 0; i < localStorageData.length; i++) {\n      const id = localStorageData[i].id;\n      if (id === result.id) {\n        addToLibraryBtn.innerText = 'Delete from my library';\n      }\n    }\n\n    addToLibraryBtn.addEventListener('click', () => {\n      if (addToLibraryBtn.innerText === 'Add to my library') {\n        localStorageData.push(result);\n        localStorage.setItem('library', JSON.stringify(localStorageData));\n        addToLibraryBtn.innerText = 'Delete from my library';\n      } else {\n        const index = localStorageData.findIndex(item => item.id === result.id);\n        if (index !== -1) {\n          localStorageData.splice(index, 1);\n          localStorage.setItem('library', JSON.stringify(localStorageData));\n          addToLibraryBtn.innerText = 'Add to my library';\n        }\n      }\n    });\n\n    openModal();\n  } catch (error) {\n    console.dir(error);\n  }\n}\n\nfunction renderDetailMarkup({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  detailMarkup = `\n    <div class='container-image-wrap'>${\n      poster_path\n        ? `<img src=\"https://image.tmdb.org/t/p/w342/${poster_path}\" alt=\"tizer\">`\n        : ''\n    }</div>\n    <div class='container-content-wrap'>\n      <h3 class='title'>${original_title}</h3>\n      <div class='content-wrap'>\n        <div class='features-wrap'>\n          <p class='feature-name'>Vote / Votes</p>\n          <p class='feature-name'>Popularity</p>\n          <p class='feature-name'>Genre</p>\n        </div>\n        <div class='features-values-wrap'>\n          <p class='feature-value'><span class=\"vote-numbers\">${vote_average}</span><span class=\"slash\"> / </span><span class=\"vote-numbers\">${vote_count}</span></p>\n          <p class='feature-value'>${popularity}</p>\n          <p class='feature-value'>${Object.values(genres)\n            .map(genre => genre.name)\n            .join(' ')}</p>\n        </div>\n      </div>\n      <p class='feature-name feature-name-uppercase'>About</p>\n      <p class='feature-value feature-value-description'>${overview}</p>\n      <button class=\"add-to-library\" type=\"button\">Add to my library</button>\n    </div>\n    `;\n  container.innerHTML = detailMarkup;\n}\n\n// galleryEl.addEventListener('click', onGalleryLinkClick);\nweekTrendsEl.addEventListener('click', onGalleryLinkClick);\n\nfunction onGalleryLinkClick(event) {\n  if (event.target.nodeName === 'LI') {\n    const movieId = event.target.dataset.id;\n    console.log('Это LI!!!');\n    fetchDetailInfo(movieId);\n  }\n}\n"],"names":["parcelRequire","$g5NAz","$2278764e9f3f2129$var$upcoming","document","querySelector","$2278764e9f3f2129$var$renderMovieCard","movieWithGenre","markup","poster_path","backdrop_path","title","release_date","vote_average","vote_count","popularity","genres","map","genre","name","overview","insertAdjacentHTML","fetch","BASE_URL","URL_TREND_DAY","API_KEY","then","response","json","movies","results","id","movieId","$6763c1580dddb1f2$export$cd52274a76bf5a72","getElementById","$6763c1580dddb1f2$var$idsArray","$6763c1580dddb1f2$var$categorysArray","async","arrayTrandMovies","data","moviesObject","$2shzp","default","get","URL_TREND_WEEK","error","console","log","$6763c1580dddb1f2$var$getTrendMoviesOfWeek","genresObject","URL_GENRE_LIST","allUncomingArr","slice","genresListArray","i","length","push","genre_ids","genreIds","genreArr","includes","indx","indexOf","pop","join","$6763c1580dddb1f2$var$getGenreForCard","vote","Number","toFixed","innerHTML","$6763c1580dddb1f2$var$onPageShow","$1dcf0f4b4dee14cd$var$scrollUp","window","addEventListener","pageYOffset","documentElement","scrollTop","classList","add","remove","scrollTo","top","behavior","$8YI3L","$315ade5dea6e7b28$var$body","$315ade5dea6e7b28$var$closeModalBtn","$315ade5dea6e7b28$var$backdrop","$315ade5dea6e7b28$var$container","$315ade5dea6e7b28$var$movieDatabaseAPI","MovieDatabaseAPI","$315ade5dea6e7b28$var$detailMarkup","$315ade5dea6e7b28$var$closeByBackdrop","e","target","$315ade5dea6e7b28$var$closeModal","$315ade5dea6e7b28$var$fetchDetailInfo","result","fetchMovieDetails","original_title","Object","values","$315ade5dea6e7b28$var$renderDetailMarkup","addToLibraryBtn","library","localStorage","getItem","localStorageData","JSON","parse","innerText","setItem","stringify","index","findIndex","item","splice","dir","key","event","nodeName","dataset"],"version":3,"file":"index.edd16bb3.js.map"}