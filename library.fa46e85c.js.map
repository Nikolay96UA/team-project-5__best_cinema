{"mappings":"gfAAAA,EAAA,SCAA,IACMC,EAAWC,SAASC,cAAc,kBAIxCC,OAAOC,iBAAiB,UAAU,YAFbD,OAAOE,aAAeJ,SAASK,gBAAgBC,WAHrD,IAOXP,EAASQ,UAAUC,IAAI,uBAEvBT,EAASQ,UAAUE,OAAO,sB,IAI9BV,EAASI,iBAAiB,SAAS,WACjCD,OAAOQ,SAAS,CACdC,IAAK,EACLC,SAAU,U,ICZaZ,SAASC,cAAc,eAGlDD,SAASG,iBAAiB,oBAAoB,WAC5C,IAoBsBU,EApBhBC,EAAiBd,SAASC,cAAc,2BACxCc,EAAkBf,SAASC,cAAc,qBACzCe,EAAqBhB,SAASC,cAAc,eAC5CgB,EAAeC,aAAaC,QAAQ,WACpCC,EAASH,EAAeI,KAAKC,MAAML,GAAgB,GAEzD,GADAM,QAAQC,IAAIJ,GACRA,EAAOK,OAAS,EAClBX,EAAeL,SACfM,EAAgBN,SAYII,EAXPO,EAYbJ,EAAmBU,UAAY,GAC/Bb,EAAOc,SAAQ,SAACC,EAAOC,GACrB,IA4ESC,EAnEeC,EAC1BC,EAEAC,EAGAC,EAEAC,EAEAC,EACAC,EAKIC,EACEC,EA1BEC,EAAexC,SAASyC,cAAc,MAC5CD,EAAajC,UAAUC,IAAI,SAC3BgC,EAAad,WAQfM,GAD0BD,EAPoBH,GAQ9CI,YAD0BD,EAE1BW,eACAT,EAH0BF,EAG1BE,aAH0BF,EAI1BY,WAJ0BZ,EAK1Ba,WACAV,EAN0BH,EAM1BG,OAN0BH,EAO1Bc,SACAV,EAR0BJ,EAQ1BI,MAR0BJ,EAS1Be,UACAV,EAV0BL,EAU1BK,aACAC,EAX0BN,EAW1BM,GAEoBL,GAChB,4CAAwDe,OAAZf,EAAY,mBAExDM,EAAY,uCAAmDS,OAAZf,EAAY,MAC7DO,EAAaL,EAAOc,KAAI,SAAAC,G,OAASA,EAAMC,I,IAAMC,KAAK,KAwBjD,6IACqJJ,OAAtBT,EAAU,cAEnGS,OAF+GV,EAAG,iGAGvHU,OADKZ,EAAM,qDACKY,OAAhBR,EAAW,OAKxBQ,OAL6BX,EAAagB,MACnE,EACA,GACA,mDAEgEL,OAkBvD,MADAjB,EAjBsBuB,OAAOpB,EAAaqB,QAAQ,KAmBtD,YACExB,EAAO,IAAMA,EAAO,EACtB,aACW,IAATA,EACF,cACEA,EAAO,GAAKA,EAAO,EACrB,cACW,IAATA,EACF,YACEA,EAAO,GAAKA,EAAO,EACrB,aACW,IAATA,EACF,aACEA,EAAO,GAAKA,EAAO,EACrB,cACW,IAATA,EACF,YACEA,EAAO,GAAKA,EAAO,EACrB,WACW,IAATA,EACF,YACGA,OAAL,EACE,YAzC2D,yBAxDhEd,EAAmBuC,YAAYf,IAC1BX,EAAQ,GAAK,GAAM,GACtBW,EAAajC,UAAUC,IAAI,c,QAlB1B,CACL,IAAMgD,EAAexD,SAASyC,cAAc,KAC5Ce,EAAajD,UAAUC,IAAI,cAC3BgD,EAAa9B,UAAa,gHAK1BZ,EAAeyC,YAAYC,E","sources":["src/library.js","src/js/components/scroll-to-top.js","src/js/libraries.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/scroll-to-top';\n// import './js/components/modals/index';\nimport './js/libraries';\n","const offset = 100;\nconst scrollUp = document.querySelector('.scroll-to-top');\n\nconst getTop = () => window.pageYOffset || document.documentElement.scrollTop;\n\nwindow.addEventListener('scroll', () => {\n  if (getTop() > offset) {\n    scrollUp.classList.add('scroll-to-top-activ');\n  } else {\n    scrollUp.classList.remove('scroll-to-top-activ');\n  }\n});\n\nscrollUp.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n","// import * as basicLightbox from 'basiclightbox';\n// import SimpleLightbox from 'simplelightbox';\n// import Pagination from 'tui-pagination';\n\nconst movieListContainer = document.querySelector('.movie-list');\n// export const movieListContainer1 = document.querySelector('.movie-list gallery');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const errorContainer = document.querySelector('.library__error-message');\n  const buttonContainer = document.querySelector('.container-button');\n  const movieListContainer = document.querySelector('.movie-list');\n  const storedMovies = localStorage.getItem('library');\n  const movies = storedMovies ? JSON.parse(storedMovies) : [];\n  console.log(movies);\n  if (movies.length > 0) {\n    errorContainer.remove();\n    buttonContainer.remove();\n    renderMovies(movies);\n  } else {\n    const errorMessage = document.createElement('p');\n    errorMessage.classList.add('error-line');\n    errorMessage.innerHTML = `\n      OOPS...<br />\n      We are very sorry!<br />\n      You donâ€™t have any movies at your library.\n    `;\n    errorContainer.appendChild(errorMessage);\n  }\n  function renderMovies(movies) {\n    movieListContainer.innerHTML = '';\n    movies.forEach((movie, index) => {\n      const movieElement = document.createElement('li');\n      movieElement.classList.add('movie');\n      movieElement.innerHTML = renderDetailMarkup(movie);\n      movieListContainer.appendChild(movieElement);\n      if ((index + 1) % 3 === 0) {\n        movieElement.classList.add('last-in-row');\n      }\n    });\n  }\n  function renderDetailMarkup({\n    poster_path,\n    original_title,\n    vote_average,\n    vote_count,\n    popularity,\n    genres,\n    overview,\n    title,\n    genre_ids,\n    release_date,\n    id,\n  }) {\n    const posterImage = poster_path\n      ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"Poster\">`\n      : '';\n    let urlPoster = `url('https://image.tmdb.org/t/p/w500${poster_path}')`;\n    const genreNames = genres.map(genre => genre.name).join(' ');\n    // return `\n    //   <div class='container-image-wrap'>\n    //     ${posterImage}\n    //   </div>\n    //   <div class='container-content-wrap'>\n    //     <h3 class='title'>${original_title}</h3>\n    //     <div class='content-wrap'>\n    //       <div class='features-wrap'>\n    //         <p class='feature-name'>Vote / Votes</p>\n    //         <p class='feature-name'>Popularity</p>\n    //         <p class='feature-name'>Genre</p>\n    //       </div>\n    //       <div class='features-values-wrap'>\n    //         <p class='feature-value'>${vote_average}<span> / </span>${vote_count}</p>\n    //         <p class='feature-value'>${popularity}</p>\n    //         <p class='feature-value'>${genreNames}</p>\n    //       </div>\n    //     </div>\n    //     <p class='feature-name feature-name-uppercase'>About</p>\n    //     <p class='feature-value feature-value-description'>${overview}</p>\n    //     <button class=\"add-to-library\" type=\"button\">Add to my library</button>\n    //   </div>\n    // `;\n    return `\n    <div class=\"lib-gallery-item\" style=\"background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%), ${urlPoster}\" data-id=${id}>\n    <div class=\"lib-gallery-item__about\">\n    <h3 class=\"lib-gallery-item__about__title\">${title}</h3>\n    <p class=\"lib-gallery-item__about__p\">${genreNames} | ${release_date.slice(\n      0,\n      4\n    )}</p>\n    </div>\n    <div class=\"vote-cinemas ${stars(Number(vote_average.toFixed(1)))}\"></div>\n    </div>`;\n  }\n});\nfunction getGenreForCard(genreIds) {\n  const genreArr = [];\n  for (let i = 0; i <= genreIds.length; i += 1) {\n    if (idsArray.includes(genreIds[i])) {\n      const indx = idsArray.indexOf(genreIds[i]);\n      genreArr.push(categorysArray[indx]);\n    }\n  }\n  while (genreArr.length > 2) {\n    genreArr.pop();\n  }\n  return genreArr.join(', ');\n}\nfunction stars(vote) {\n  if (vote === 10) {\n    return 'ten-stars';\n  } else if (vote < 10 && vote > 8) {\n    return 'nine-stars';\n  } else if (vote === 8) {\n    return 'eight-stars';\n  } else if (vote < 8 && vote > 6) {\n    return 'seven-stars';\n  } else if (vote === 6) {\n    return 'six-stars';\n  } else if (vote < 6 && vote > 4) {\n    return 'five-stars';\n  } else if (vote === 4) {\n    return 'four-stars';\n  } else if (vote < 4 && vote > 2) {\n    return 'three-stars';\n  } else if (vote === 2) {\n    return 'two-stars';\n  } else if (vote < 2 && vote > 0) {\n    return 'one-star';\n  } else if (vote === 0) {\n    return 'zero-star';\n  } else if (!vote) {\n    return 'No rating';\n  }\n}\n"],"names":["parcelRequire","$49e2bb21a8ea3ac5$var$scrollUp","document","querySelector","window","addEventListener","pageYOffset","documentElement","scrollTop","classList","add","remove","scrollTo","top","behavior","movies","errorContainer","buttonContainer","movieListContainer1","storedMovies","localStorage","getItem","movies1","JSON","parse","console","log","length","innerHTML","forEach","movie","index","vote","param","poster_path","vote_average","genres","title","release_date","id","urlPoster","genreNames","movieElement","createElement","original_title","vote_count","popularity","overview","genre_ids","concat","map","genre","name","join","slice","Number","toFixed","appendChild","errorMessage"],"version":3,"file":"library.fa46e85c.js.map"}