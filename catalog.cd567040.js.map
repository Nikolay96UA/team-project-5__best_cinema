{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,gBCAAC,EAAAD,EAAA,S,6EAKA,IDKIE,ECLJC,EAkBG,W,sBAlBGC,I,6BAKAC,IAAA,oB,MAAN,SAAwBC,G,OAAxBC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,2FAAiBC,EAAAC,QAAMC,IAC3B,GAAqBC,OAAlBC,EAAAC,SAAS,WAA4BF,OAAnBT,EAAQ,aAAmBS,OAARC,EAAAE,QAAQ,oB,cAD5CP,EAAQQ,EAAAC,K,kBAGPT,EAASU,M,gCAEhBC,QAAQC,MAAKJ,EAAAK,I,wDAPjB,E,OAaG,G,aDnBGC,EAAgBC,SAASC,cAAc,sBACvCC,EAAWF,SAASC,cAAc,mBAElCE,GADQH,SAASC,cAAc,UACnBD,SAASC,cAAc,UAEnCG,EAAmB,IAAI3B,EAM7B,SAAS4B,IACPH,EAASI,UAAUC,OAAO,mB,UAGbC,I,OAAAA,EAAf3B,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,EAA+BJ,G,IAKrB6B,EAQAC,E,2FAReN,EAAiBO,kBAAkB/B,G,OAExDgC,EAFMH,EAAMhB,EAAAC,MAGZE,QAAQiB,IAAIJ,GAGZJ,IAEMK,EAAkBV,SAASC,cAAc,mBAE7Ca,aAAaC,QAAQ,YACrBC,KAAKC,MAAMH,aAAaC,QAAQ,YAAYG,SAAST,KAErDC,EAAgBS,UAAY,0BAI9BT,EAAgBU,iBAAiB,SAAS,WACxC,IAAMC,EAAUP,aAAaC,QAAQ,WACjCC,KAAKC,MAAMH,aAAaC,QAAQ,YAChC,GAEJ,GAAkC,sBAA9BL,EAAgBS,UAClBE,EAAQC,KAAKb,GACbK,aAAaS,QAAQ,UAAWP,KAAKQ,UAAUH,IAC/CX,EAAgBS,UAAY,6BACvB,CACL,IAAMM,EAAQJ,EAAQK,WAAU,SAAAC,G,OAAQA,EAAKC,OAASnB,EAAOmB,I,KAC/C,IAAVH,IACFJ,EAAQQ,OAAOJ,EAAO,GACtBX,aAAaS,QAAQ,UAAWP,KAAKQ,UAAUH,IAC/CX,EAAgBS,UAAY,oB,uDAKlCvB,QAAQkC,IAAGrC,EAAAK,I,2DAzCeiC,MAAAC,KAAAC,U,CA6C9B,SAASrB,EAAmBsB,G,IAC1BC,EAD0BD,EAC1BC,YACAC,EAF0BF,EAE1BE,eACAC,EAH0BH,EAG1BG,aACAC,EAJ0BJ,EAI1BI,WACAC,EAL0BL,EAK1BK,WACAC,EAN0BN,EAM1BM,OACAC,EAP0BP,EAO1BO,SAEAjE,EAAe,2CAOSa,OALpB8C,EACI,4CAAwD9C,OAAZ8C,EAAY,kBACxD,GACL,8EAUgC9C,OARX+C,EAAe,oUAQ2B/C,OAA/BgD,EAAa,oBACbhD,OAD+BiD,EAAW,6CAE1CjD,OADAkD,EAAW,6CAOWlD,OANtBqD,OAAOC,OAAOH,GACtCI,KAAI,SAAAC,G,OAASA,EAAMjB,I,IACnBkB,KAAK,KAAK,iKAI6CzD,OAAToD,EAAS,yGAIlEtC,EAAU4C,UAAYvE,C,CAvFxBuB,EAAcqB,iBAAiB,QAASf,GA0FxC2C,EAAAC,UAAU7B,iBAAiB,SAE3B,SAA4B8B,GAC1B,GAA8B,OAA1BA,EAAMC,OAAOC,SAAmB,E,SAvFPxE,GAAhB4B,EAAeuB,MAAAC,KAAAC,U,CAyF1BoB,CADgBH,EAAMC,OAAOG,QAAQC,G","sources":["src/js/catalog.js","src/js/components/modals/modal-pop-up.js","src/js/utils/fetchMovieDetails.js"],"sourcesContent":["import './components/gallery';\nimport './components/pagination';\nimport './components/modals/modal-pop-up';\n","import { MovieDatabaseAPI } from '../../utils/fetchMovieDetails';\n// import { onGalleryLinkClick } from '../components/gallery';\nimport { galleryEl } from '../gallery';\n\nconst closeModalBtn = document.querySelector('[data-close-modal]');\nconst backdrop = document.querySelector('[data-backdrop]');\nconst modal = document.querySelector('.modal');\nconst container = document.querySelector('.wrap');\n\nconst movieDatabaseAPI = new MovieDatabaseAPI();\nlet detailMarkup;\n\n// form.addEventListener('submit', fetchDetailInfo);\ncloseModalBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  backdrop.classList.toggle('backdrop--hidden');\n}\n\nasync function fetchDetailInfo(movieId) {\n  try {\n    // e.preventDefault();\n    // movieDatabaseAPI.query = e.currentTarget.elements.searchQuery.value;\n    // console.log(movieDatabaseAPI.query);\n    const result = await movieDatabaseAPI.fetchMovieDetails(movieId);\n    // const secondResult = await fetchGenreDetails(result.genres.id);\n    renderDetailMarkup(result);\n    console.log(result);\n    // const renderMarkup = renderDetailMarkup(result);\n    // console.log(renderMarkup);\n    toggleModal();\n\n    const addToLibraryBtn = document.querySelector('.add-to-library');\n    if (\n      localStorage.getItem('library') &&\n      JSON.parse(localStorage.getItem('library')).includes(result)\n    ) {\n      addToLibraryBtn.innerText = 'Delete from my library';\n    }\n\n    // Add or remove object from library\n    addToLibraryBtn.addEventListener('click', () => {\n      const library = localStorage.getItem('library')\n        ? JSON.parse(localStorage.getItem('library'))\n        : [];\n\n      if (addToLibraryBtn.innerText === 'Add to my library') {\n        library.push(result);\n        localStorage.setItem('library', JSON.stringify(library));\n        addToLibraryBtn.innerText = 'Delete from my library';\n      } else {\n        const index = library.findIndex(item => item.name === result.name);\n        if (index !== -1) {\n          library.splice(index, 1);\n          localStorage.setItem('library', JSON.stringify(library));\n          addToLibraryBtn.innerText = 'Add to my library';\n        }\n      }\n    });\n  } catch (error) {\n    console.dir(error);\n  }\n}\n\nfunction renderDetailMarkup({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  detailMarkup = `\n    <div class='container-image-wrap'>${\n      poster_path\n        ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"tizer\">`\n        : ''\n    }</div>\n    <div class='container-content-wrap'>\n      <h3 class='title'>${original_title}</h3>\n      <div class='content-wrap'>\n        <div class='features-wrap'>\n          <p class='feature-name'>Vote / Votes</p>\n          <p class='feature-name'>Popularity</p>\n          <p class='feature-name'>Genre</p>\n        </div>\n        <div class='features-values-wrap'>\n          <p class='feature-value'>${vote_average}<span> / </span>${vote_count}</p>\n          <p class='feature-value'>${popularity}</p>\n          <p class='feature-value'>${Object.values(genres)\n            .map(genre => genre.name)\n            .join(' ')}</p>\n        </div>\n      </div>\n      <p class='feature-name feature-name-uppercase'>About</p>\n      <p class='feature-value feature-value-description'>${overview}</p>\n      <button class=\"add-to-library\" type=\"button\">Add to my library</button>\n    </div>\n    `;\n  container.innerHTML = detailMarkup;\n}\n\ngalleryEl.addEventListener('click', onGalleryLinkClick);\n\nfunction onGalleryLinkClick(event) {\n  if (event.target.nodeName === 'LI') {\n    const movieId = event.target.dataset.id;\n    fetchDetailInfo(movieId);\n  }\n}\n\nexport { fetchDetailInfo };\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../constants/api';\n// import { renderOnError } from '../components/hero';\nimport { onGalleryLinkClick } from '../components/gallery';\n\nclass MovieDatabaseAPI{\n  constructor() {\n  }\n\n  // Function to fetch detail info from TMDB API\nasync fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    // renderOnError();\n  }\n}\n}\n\nexport {MovieDatabaseAPI};"],"names":["parcelRequire","$bpxeT","$3e7e35b6b866e1e1$var$detailMarkup","$b5dad83a5435f19f$export$f1dd75fcc2a6c47a","MovieDatabaseAPI","key","movieId","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","concat","$lIyNj","BASE_URL","API_KEY","_ctx","sent","data","console","error","t0","$3e7e35b6b866e1e1$var$closeModalBtn","document","querySelector","$3e7e35b6b866e1e1$var$backdrop","$3e7e35b6b866e1e1$var$container","$3e7e35b6b866e1e1$var$movieDatabaseAPI","$3e7e35b6b866e1e1$var$toggleModal","classList","toggle","$3e7e35b6b866e1e1$var$_fetchDetailInfo","result","addToLibraryBtn","fetchMovieDetails","$3e7e35b6b866e1e1$var$renderDetailMarkup","log","localStorage","getItem","JSON","parse","includes","innerText","addEventListener","library","push","setItem","stringify","index","findIndex","item","name","splice","dir","apply","this","arguments","param","poster_path","original_title","vote_average","vote_count","popularity","genres","overview","Object","values","map","genre","join","innerHTML","$kDSvw","galleryEl","event","target","nodeName","$3e7e35b6b866e1e1$export$67ac821cb1f1fa91","dataset","id"],"version":3,"file":"catalog.cd567040.js.map"}