{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,yCCIA,MAAME,EAAgBC,SAASC,cAAc,sBACvCC,EAAWF,SAASC,cAAc,mBAElCE,GADQH,SAASC,cAAc,UACnBD,SAASC,cAAc,UAEnCG,EAAmB,IDJzB,MAKAC,wBAAwBC,GACtB,IAIE,aAHuBR,EAAAS,QAAMC,IAC3B,GAAGC,EAAAC,kBAAkBJ,aAAmBG,EAAAE,2BAE1BC,I,CAChB,MAAOC,GACPC,QAAQD,MAAMA,E,EAXhBE,cAAc,GCIhB,IAAIC,EAKJ,SAASC,IACPf,EAASgB,UAAUC,OAAO,mB,CAG5Bd,eAAee,EAAgBd,GAC7B,IAIE,MAAMe,QAAejB,EAAiBkB,kBAAkBhB,IAwC5D,UAA4BiB,YAC1BA,EAAWC,eACXA,EAAcC,aACdA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,OACVA,EAAMC,SACNA,IAEAb,EAAe,2CAEXO,EACI,6CAA6CA,kBAC7C,+EAGgBC,+VAQsCC,oEAA+EC,oDAC1GC,6CACAG,OAAOC,OAAOH,GACtCI,KAAIC,GAASA,EAAMC,OACnBC,KAAK,oKAIyCN,yGAIzD1B,EAAUiC,UAAYpB,C,CA1EpBqB,CAAmBhB,GACnBP,QAAQwB,IAAIjB,GAGZJ,IAEA,MAAMsB,EAAkBvC,SAASC,cAAc,mBAE7CuC,aAAaC,QAAQ,YACrBC,KAAKC,MAAMH,aAAaC,QAAQ,YAAYG,SAASvB,KAErDkB,EAAgBM,UAAY,0BAI9BN,EAAgBO,iBAAiB,SAAS,KACxC,MAAMC,EAAUP,aAAaC,QAAQ,WACjCC,KAAKC,MAAMH,aAAaC,QAAQ,YAChC,GAEJ,GAAkC,sBAA9BF,EAAgBM,UAClBE,EAAQC,KAAK3B,GACbmB,aAAaS,QAAQ,UAAWP,KAAKQ,UAAUH,IAC/CR,EAAgBM,UAAY,6BACvB,CACL,MAAMM,EAAQJ,EAAQK,WAAUC,GAAQA,EAAKnB,OAASb,EAAOa,QAC/C,IAAViB,IACFJ,EAAQO,OAAOH,EAAO,GACtBX,aAAaS,QAAQ,UAAWP,KAAKQ,UAAUH,IAC/CR,EAAgBM,UAAY,oB,KAIlC,MAAOhC,GACPC,QAAQyC,IAAI1C,E,EA/ChBd,EAAc+C,iBAAiB,QAAS7B,GA0FxCuC,EAAAC,UAAUX,iBAAiB,SAE3B,SAA4BY,GAC1B,GAA8B,OAA1BA,EAAMC,OAAOC,SAAmB,CAElCxC,EADgBsC,EAAMC,OAAOE,QAAQC,G","sources":["src/js/catalog.js","src/js/utils/fetchMovieDetails.js","src/js/components/modals/modal-pop-up.js"],"sourcesContent":["import './components/gallery';\nimport './components/pagination';\nimport './components/modals/modal-pop-up';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../constants/api';\n// import { renderOnError } from '../components/hero';\nimport { onGalleryLinkClick } from '../components/gallery';\n\nclass MovieDatabaseAPI{\n  constructor() {\n  }\n\n  // Function to fetch detail info from TMDB API\nasync fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    // renderOnError();\n  }\n}\n}\n\nexport {MovieDatabaseAPI};","import { MovieDatabaseAPI } from '../../utils/fetchMovieDetails';\n// import { onGalleryLinkClick } from '../components/gallery';\nimport { galleryEl } from '../gallery';\n\nconst closeModalBtn = document.querySelector('[data-close-modal]');\nconst backdrop = document.querySelector('[data-backdrop]');\nconst modal = document.querySelector('.modal');\nconst container = document.querySelector('.wrap');\n\nconst movieDatabaseAPI = new MovieDatabaseAPI();\nlet detailMarkup;\n\n// form.addEventListener('submit', fetchDetailInfo);\ncloseModalBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  backdrop.classList.toggle('backdrop--hidden');\n}\n\nasync function fetchDetailInfo(movieId) {\n  try {\n    // e.preventDefault();\n    // movieDatabaseAPI.query = e.currentTarget.elements.searchQuery.value;\n    // console.log(movieDatabaseAPI.query);\n    const result = await movieDatabaseAPI.fetchMovieDetails(movieId);\n    // const secondResult = await fetchGenreDetails(result.genres.id);\n    renderDetailMarkup(result);\n    console.log(result);\n    // const renderMarkup = renderDetailMarkup(result);\n    // console.log(renderMarkup);\n    toggleModal();\n\n    const addToLibraryBtn = document.querySelector('.add-to-library');\n    if (\n      localStorage.getItem('library') &&\n      JSON.parse(localStorage.getItem('library')).includes(result)\n    ) {\n      addToLibraryBtn.innerText = 'Delete from my library';\n    }\n\n    // Add or remove object from library\n    addToLibraryBtn.addEventListener('click', () => {\n      const library = localStorage.getItem('library')\n        ? JSON.parse(localStorage.getItem('library'))\n        : [];\n\n      if (addToLibraryBtn.innerText === 'Add to my library') {\n        library.push(result);\n        localStorage.setItem('library', JSON.stringify(library));\n        addToLibraryBtn.innerText = 'Delete from my library';\n      } else {\n        const index = library.findIndex(item => item.name === result.name);\n        if (index !== -1) {\n          library.splice(index, 1);\n          localStorage.setItem('library', JSON.stringify(library));\n          addToLibraryBtn.innerText = 'Add to my library';\n        }\n      }\n    });\n  } catch (error) {\n    console.dir(error);\n  }\n}\n\nfunction renderDetailMarkup({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  detailMarkup = `\n    <div class='container-image-wrap'>${\n      poster_path\n        ? `<img src=\"https://image.tmdb.org/t/p/w342/${poster_path}\" alt=\"tizer\">`\n        : ''\n    }</div>\n    <div class='container-content-wrap'>\n      <h3 class='title'>${original_title}</h3>\n      <div class='content-wrap'>\n        <div class='features-wrap'>\n          <p class='feature-name'>Vote / Votes</p>\n          <p class='feature-name'>Popularity</p>\n          <p class='feature-name'>Genre</p>\n        </div>\n        <div class='features-values-wrap'>\n          <p class='feature-value'><span class=\"vote-numbers\">${vote_average}</span><span class=\"slash\"> / </span><span class=\"vote-numbers\">${vote_count}</span></p>\n          <p class='feature-value'>${popularity}</p>\n          <p class='feature-value'>${Object.values(genres)\n            .map(genre => genre.name)\n            .join(' ')}</p>\n        </div>\n      </div>\n      <p class='feature-name feature-name-uppercase'>About</p>\n      <p class='feature-value feature-value-description'>${overview}</p>\n      <button class=\"add-to-library\" type=\"button\">Add to my library</button>\n    </div>\n    `;\n  container.innerHTML = detailMarkup;\n}\n\ngalleryEl.addEventListener('click', onGalleryLinkClick);\n\nfunction onGalleryLinkClick(event) {\n  if (event.target.nodeName === 'LI') {\n    const movieId = event.target.dataset.id;\n    fetchDetailInfo(movieId);\n  }\n}\n\nexport { fetchDetailInfo };\n"],"names":["parcelRequire","$2shzp","$009f9a15b4d5abbb$var$closeModalBtn","document","querySelector","$009f9a15b4d5abbb$var$backdrop","$009f9a15b4d5abbb$var$container","$009f9a15b4d5abbb$var$movieDatabaseAPI","async","movieId","default","get","$g5NAz","BASE_URL","API_KEY","data","error","console","constructor","$009f9a15b4d5abbb$var$detailMarkup","$009f9a15b4d5abbb$var$toggleModal","classList","toggle","$009f9a15b4d5abbb$export$67ac821cb1f1fa91","result","fetchMovieDetails","poster_path","original_title","vote_average","vote_count","popularity","genres","overview","Object","values","map","genre","name","join","innerHTML","$009f9a15b4d5abbb$var$renderDetailMarkup","log","addToLibraryBtn","localStorage","getItem","JSON","parse","includes","innerText","addEventListener","library","push","setItem","stringify","index","findIndex","item","splice","dir","$3Nna8","galleryEl","event","target","nodeName","dataset","id"],"version":3,"file":"catalog.291b17e8.js.map"}